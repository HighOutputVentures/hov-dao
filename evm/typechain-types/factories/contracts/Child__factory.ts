/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Child, ChildInterface } from "../../contracts/Child";

const _abi = [
  {
    inputs: [],
    name: "approved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061017e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806319d40b0814610030575b600080fd5b61003861004e565b60405161004591906100e9565b60405180910390f35b600080610090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610087906100c9565b60405180910390fd5b6001905090565b60006100a4600783610104565b91506100af8261011f565b602082019050919050565b6100c381610115565b82525050565b600060208201905081810360008301526100e281610097565b9050919050565b60006020820190506100fe60008301846100ba565b92915050565b600082825260208201905092915050565b6000819050919050565b7f72656d6f7665640000000000000000000000000000000000000000000000000060008201525056fea2646970667358221220a0261a064881bf4afe7dd883885c5486086c0153158ae63c623cd441f996d67f64736f6c63430008040033";

type ChildConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChildConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Child__factory extends ContractFactory {
  constructor(...args: ChildConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Child> {
    return super.deploy(overrides || {}) as Promise<Child>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Child {
    return super.attach(address) as Child;
  }
  override connect(signer: Signer): Child__factory {
    return super.connect(signer) as Child__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChildInterface {
    return new utils.Interface(_abi) as ChildInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Child {
    return new Contract(address, _abi, signerOrProvider) as Child;
  }
}
