/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Membership,
  MembershipInterface,
} from "../../contracts/Membership";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f484f5620506173730000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f484f560000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000b8565b508060019080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6118aa80620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190610ec0565b6102bc565b6040516100fb9190611210565b60405180910390f35b61010c61039e565b604051610119919061122b565b60405180910390f35b61013c60048036038101906101379190610ee9565b610430565b60405161014991906111f5565b60405180910390f35b61016c60048036038101906101679190610e84565b61049c565b005b61018860048036038101906101839190610d7e565b610504565b005b6101a4600480360381019061019f9190610d7e565b61056f565b005b6101c060048036038101906101bb9190610ee9565b6105da565b6040516101cd91906111f5565b60405180910390f35b6101f060048036038101906101eb9190610d19565b61068c565b6040516101fd91906112cd565b60405180910390f35b61020e610744565b60405161021b919061122b565b60405180910390f35b61023e60048036038101906102399190610e48565b6107d6565b005b61025a60048036038101906102559190610dcd565b61083e565b005b61027660048036038101906102719190610ee9565b6108ac565b604051610283919061122b565b60405180910390f35b6102a660048036038101906102a19190610d42565b610953565b6040516102b39190611210565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826109c3565b5b9050919050565b6060600080546103ad906114ec565b80601f01602080910402602001604051908101604052809291908181526020018280546103d9906114ec565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b60008160405160200161044391906111da565b604051602081830303815290604052506000610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b906112ad565b60405180910390fd5b309050919050565b81816040516020016104af92919061118a565b604051602081830303815290604052506000610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f7906112ad565b60405180910390fd5b5050565b828282604051602001610519939291906110d7565b60405160208183030381529060405250600061056a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610561906112ad565b60405180910390fd5b505050565b828282604051602001610584939291906110d7565b6040516020818303038152906040525060006105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc906112ad565b60405180910390fd5b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061126d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061124d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610753906114ec565b80601f016020809104026020016040519081016040528092919081815260200182805461077f906114ec565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b5050505050905090565b81816040516020016107e992919061115e565b60405160208183030381529060405250600061083a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610831906112ad565b60405180910390fd5b5050565b838383836040516020016108559493929190611114565b6040516020818303038152906040525060006108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906112ad565b60405180910390fd5b50505050565b60606108b782610a2d565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061128d565b60405180910390fd5b6000610900610a99565b90506000815111610920576040518060200160405280600081525061094b565b8061092a84610ab0565b60405160200161093b9291906111b6565b6040516020818303038152906040525b915050919050565b600082826040516020016109689291906110ab565b6040516020818303038152906040525060006109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b0906112ad565b60405180910390fd5b6000905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b606060405180602001604052806000815250905090565b60606000821415610af8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610c58565b600082905060005b60008214610b2a578080610b139061154f565b915050600a82610b2391906113d1565b9150610b00565b60008167ffffffffffffffff811115610b6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b9e5781602001600182028036833780820191505090505b5090505b60008514610c5157600182610bb79190611402565b9150600a85610bc691906115ea565b6030610bd2919061137b565b60f81b818381518110610c0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610c4a91906113d1565b9450610ba2565b8093505050505b919050565b6000610c70610c6b8461130d565b6112e8565b905082815260208101848484011115610c8857600080fd5b610c938482856114aa565b509392505050565b600081359050610caa81611818565b92915050565b600081359050610cbf8161182f565b92915050565b600081359050610cd481611846565b92915050565b600082601f830112610ceb57600080fd5b8135610cfb848260208601610c5d565b91505092915050565b600081359050610d138161185d565b92915050565b600060208284031215610d2b57600080fd5b6000610d3984828501610c9b565b91505092915050565b60008060408385031215610d5557600080fd5b6000610d6385828601610c9b565b9250506020610d7485828601610c9b565b9150509250929050565b600080600060608486031215610d9357600080fd5b6000610da186828701610c9b565b9350506020610db286828701610c9b565b9250506040610dc386828701610d04565b9150509250925092565b60008060008060808587031215610de357600080fd5b6000610df187828801610c9b565b9450506020610e0287828801610c9b565b9350506040610e1387828801610d04565b925050606085013567ffffffffffffffff811115610e3057600080fd5b610e3c87828801610cda565b91505092959194509250565b60008060408385031215610e5b57600080fd5b6000610e6985828601610c9b565b9250506020610e7a85828601610cb0565b9150509250929050565b60008060408385031215610e9757600080fd5b6000610ea585828601610c9b565b9250506020610eb685828601610d04565b9150509250929050565b600060208284031215610ed257600080fd5b6000610ee084828501610cc5565b91505092915050565b600060208284031215610efb57600080fd5b6000610f0984828501610d04565b91505092915050565b610f1b81611436565b82525050565b610f32610f2d82611436565b611598565b82525050565b610f4181611448565b82525050565b610f58610f5382611448565b6115aa565b82525050565b6000610f698261133e565b610f738185611354565b9350610f838185602086016114b9565b80840191505092915050565b6000610f9a82611349565b610fa4818561135f565b9350610fb48185602086016114b9565b610fbd816116d7565b840191505092915050565b6000610fd382611349565b610fdd8185611370565b9350610fed8185602086016114b9565b80840191505092915050565b6000611006602a8361135f565b915061101182611702565b604082019050919050565b600061102960298361135f565b915061103482611751565b604082019050919050565b600061104c602f8361135f565b9150611057826117a0565b604082019050919050565b600061106f60088361135f565b915061107a826117ef565b602082019050919050565b61108e816114a0565b82525050565b6110a56110a0826114a0565b6115ce565b82525050565b60006110b78285610f21565b6014820191506110c78284610f21565b6014820191508190509392505050565b60006110e38286610f21565b6014820191506110f38285610f21565b6014820191506111038284611094565b602082019150819050949350505050565b60006111208287610f21565b6014820191506111308286610f21565b6014820191506111408285611094565b6020820191506111508284610f5e565b915081905095945050505050565b600061116a8285610f21565b60148201915061117a8284610f47565b6001820191508190509392505050565b60006111968285610f21565b6014820191506111a68284611094565b6020820191508190509392505050565b60006111c28285610fc8565b91506111ce8284610fc8565b91508190509392505050565b60006111e68284611094565b60208201915081905092915050565b600060208201905061120a6000830184610f12565b92915050565b60006020820190506112256000830184610f38565b92915050565b600060208201905081810360008301526112458184610f8f565b905092915050565b6000602082019050818103600083015261126681610ff9565b9050919050565b600060208201905081810360008301526112868161101c565b9050919050565b600060208201905081810360008301526112a68161103f565b9050919050565b600060208201905081810360008301526112c681611062565b9050919050565b60006020820190506112e26000830184611085565b92915050565b60006112f2611303565b90506112fe828261151e565b919050565b6000604051905090565b600067ffffffffffffffff821115611328576113276116a8565b5b611331826116d7565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611386826114a0565b9150611391836114a0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113c6576113c561161b565b5b828201905092915050565b60006113dc826114a0565b91506113e7836114a0565b9250826113f7576113f661164a565b5b828204905092915050565b600061140d826114a0565b9150611418836114a0565b92508282101561142b5761142a61161b565b5b828203905092915050565b600061144182611480565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156114d75780820151818401526020810190506114bc565b838111156114e6576000848401525b50505050565b6000600282049050600182168061150457607f821691505b6020821081141561151857611517611679565b5b50919050565b611527826116d7565b810181811067ffffffffffffffff82111715611546576115456116a8565b5b80604052505050565b600061155a826114a0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561158d5761158c61161b565b5b600182019050919050565b60006115a3826115bc565b9050919050565b60006115b5826115d8565b9050919050565b60006115c7826116f5565b9050919050565b6000819050919050565b60006115e3826116e8565b9050919050565b60006115f5826114a0565b9150611600836114a0565b9250826116105761160f61164a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160f81b9050919050565b60008160601b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f44495341424c4544000000000000000000000000000000000000000000000000600082015250565b61182181611436565b811461182c57600080fd5b50565b61183881611448565b811461184357600080fd5b50565b61184f81611454565b811461185a57600080fd5b50565b611866816114a0565b811461187157600080fd5b5056fea26469706673582212200b395eb2606e787948553612f4456d1ff987b8450424e71b93167b93851119c464736f6c63430008040033";

type MembershipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Membership__factory extends ContractFactory {
  constructor(...args: MembershipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Membership> {
    return super.deploy(overrides || {}) as Promise<Membership>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Membership {
    return super.attach(address) as Membership;
  }
  override connect(signer: Signer): Membership__factory {
    return super.connect(signer) as Membership__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipInterface {
    return new utils.Interface(_abi) as MembershipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Membership {
    return new Contract(address, _abi, signerOrProvider) as Membership;
  }
}
